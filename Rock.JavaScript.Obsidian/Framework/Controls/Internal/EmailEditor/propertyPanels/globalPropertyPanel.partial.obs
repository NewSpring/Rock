<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>
    <FlatPanel :hasPaddedBody="false"
               title="Styles">
        <AccordionGroup>
            <Accordion title="Body Settings">
                <CommunicationTemplateProperty v-if="communicationTemplates"
                                               v-model:communicationTemplateGuid="internalCommunicationTemplateGuid"
                                               :communicationTemplates="communicationTemplates" />

                <RangeSliderProperty label="Body Width"
                                     :min="480"
                                     :max="900"
                                     :showValueBar="true"
                                     :valueProvider="applyDefaultValueToProvider(bodyWidthProvider, DefaultBodyWidth)"
                                     valueSuffix="px" />

                <BackgroundColorProperty :element="document.body"
                                         label="Body Color"
                                         :valueProvider="bodyColorProvider"
                                         :styleSheetMode="{
                                             styleCssClass: RockStylesCssClass,
                                             rulesetCssSelector: `.${RockBodyInnerContainerCssClass}`
                                         }" />

                <DropDownListProperty label="Body Alignment"
                                      :items="[
                                          {
                                              text: 'Left',
                                              value: 'left'
                                          },
                                          {
                                              text: 'Center',
                                              value: 'center'
                                          },
                                          {
                                              text: 'Right',
                                              value: 'right'
                                          }
                                      ]"
                                      :showBlankItem="false"
                                      :valueProvider="applyDefaultValueToProvider(bodyAlignmentProvider, DefaultBodyAlignment)" />

                <BorderPropertyGroup :element="document.body"
                                     :styleSheetMode="{
                                         styleCssClass: RockStylesCssClass,
                                         rulesetCssSelector: `.${RockBodyInnerContainerCssClass}`
                                     }" />

                <MarginProperty :element="document.body"
                                :styleSheetMode="{
                                    styleCssClass: RockStylesCssClass,
                                    rulesetCssSelector: `.${RockBodyInnerContainerCssClass}`
                                }" />

                <PaddingProperty :element="document.body"
                                 :styleSheetMode="{
                                     styleCssClass: RockStylesCssClass,
                                     rulesetCssSelector: `.${RockBodyInnerContainerCssClass}`
                                 }" />
            </Accordion>

            <Accordion title="Background Settings">
                <BackgroundColorProperty :element="document.body"
                                         :styleSheetMode="{
                                             styleCssClass: RockStylesCssClass,
                                             rulesetCssSelector: 'html'
                                         }" />

                <BackgroundImagePropertyGroup :element="document.body" />
            </Accordion>

            <Accordion title="Text Styling" removeBottomPadding removeTopPadding>
                <AccordionGroup>
                    <Accordion accordionType="link"
                               title="Global">
                        <FontPropertyGroup :element="document.body"
                                           :styleSheetMode="{
                                               styleCssClass: RockStylesCssClass,
                                               rulesetCssSelector: 'body'
                                           }" />
                    </Accordion>

                    <Accordion accordionType="link"
                               title="Heading 1">
                        <FontPropertyGroup :element="document.body"
                                           :styleSheetMode="{
                                               styleCssClass: RockStylesCssClass,
                                               rulesetCssSelector: '.component-title h1'
                                           }" />

                        <MarginProperty :element="document.body"
                                        :styleSheetMode="{
                                            styleCssClass: RockStylesCssClass,
                                            rulesetCssSelector: '.component-title h1'
                                        }" />

                        <PaddingProperty :element="document.body"
                                         :styleSheetMode="{
                                             styleCssClass: RockStylesCssClass,
                                             rulesetCssSelector: '.component-title h1'
                                         }" />

                        <BorderPropertyGroup :element="document.body"
                                             :styleSheetMode="{
                                                 styleCssClass: RockStylesCssClass,
                                                 rulesetCssSelector: '.component-title h1'
                                             }" />
                    </Accordion>

                    <Accordion accordionType="link"
                               title="Heading 2">
                        <FontPropertyGroup :element="document.body"
                                           :styleSheetMode="{
                                               styleCssClass: RockStylesCssClass,
                                               rulesetCssSelector: '.component-title h2'
                                           }" />

                        <MarginProperty :element="document.body"
                                        :styleSheetMode="{
                                            styleCssClass: RockStylesCssClass,
                                            rulesetCssSelector: '.component-title h2'
                                        }" />

                        <PaddingProperty :element="document.body"
                                         :styleSheetMode="{
                                             styleCssClass: RockStylesCssClass,
                                             rulesetCssSelector: '.component-title h2'
                                         }" />

                        <BorderPropertyGroup :element="document.body"
                                             :styleSheetMode="{
                                                 styleCssClass: RockStylesCssClass,
                                                 rulesetCssSelector: '.component-title h2'
                                             }" />
                    </Accordion>

                    <Accordion accordionType="link"
                               title="Heading 3">
                        <FontPropertyGroup :element="document.body"
                                           :styleSheetMode="{
                                               styleCssClass: RockStylesCssClass,
                                               rulesetCssSelector: '.component-title h3'
                                           }" />

                        <MarginProperty :element="document.body"
                                        :styleSheetMode="{
                                            styleCssClass: RockStylesCssClass,
                                            rulesetCssSelector: '.component-title h3'
                                        }" />

                        <PaddingProperty :element="document.body"
                                         :styleSheetMode="{
                                             styleCssClass: RockStylesCssClass,
                                             rulesetCssSelector: '.component-title h3'
                                         }" />

                        <BorderPropertyGroup :element="document.body"
                                             :styleSheetMode="{
                                                 styleCssClass: RockStylesCssClass,
                                                 rulesetCssSelector: '.component-title h3'
                                             }" />
                    </Accordion>

                    <Accordion accordionType="link"
                               title="Paragraph">
                        <FontPropertyGroup :element="document.body"
                                           :styleSheetMode="{
                                               styleCssClass: RockStylesCssClass,
                                               rulesetCssSelector: '.component-text'
                                           }"
                                           :visibilityOptions="{
                                               isJustifyTextHidden: true
                                           }" />

                        <MarginProperty :element="document.body"
                                        :styleSheetMode="{
                                            styleCssClass: RockStylesCssClass,
                                            rulesetCssSelector: '.component-text'
                                        }" />
                    </Accordion>
                </AccordionGroup>
            </Accordion>

            <Accordion title="Button Styling">
                <BackgroundColorProperty :element="document.body"
                                         :styleSheetMode="{
                                             styleCssClass: RockStylesCssClass,
                                             rulesetCssSelector: '.component-button .button-link'
                                         }" />


                <FontPropertyGroup :element="document.body"
                                   :styleSheetMode="{
                                       styleCssClass: RockStylesCssClass,
                                       rulesetCssSelector: '.component-button .button-link'
                                   }"
                                   :visibilityOptions="{
                                       isJustifyTextHidden: true
                                   }" />

                <BorderPropertyGroup :element="document.body"
                                     label="Button Border"
                                     :styleSheetMode="{
                                         styleCssClass: RockStylesCssClass,
                                         rulesetCssSelector: '.component-button .button-link'
                                     }" />

                <BorderRadiusProperty :element="document.body"
                                      label="Corner Radius"
                                      :styleSheetMode="{
                                          styleCssClass: RockStylesCssClass,
                                          rulesetCssSelector: '.component-button .button-content, .component-button .button-link'
                                      }" />

                <PaddingProperty :element="document.body"
                                 label="Margin"
                                 :styleSheetMode="{
                                     styleCssClass: RockStylesCssClass,
                                     rulesetCssSelector: '.component-button .button-innerwrap'
                                 }" />

                <PaddingProperty :element="document.body"
                                 :styleSheetMode="{
                                     styleCssClass: RockStylesCssClass,
                                     rulesetCssSelector: '.component-button .button-link'
                                 }" />
            </Accordion>

            <Accordion title="Divider Styling">
                <div class="row">
                    <div class="col-sm-6">
                        <DividerStyleProperty :element="document.body"
                                              label="Style"
                                              :styleSheetMode="{
                                                  styleCssClass: RockStylesCssClass,
                                                  rulesetCssSelector: '.component-divider hr'
                                              }" />
                    </div>

                    <div class="col-sm-6 pl-0">
                        <DividerThicknessProperty :element="document.body"
                                                  label="Thickness"
                                                  :styleSheetMode="{
                                                      styleCssClass: RockStylesCssClass,
                                                      rulesetCssSelector: '.component-divider hr'
                                                  }" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-8">
                        <DividerColorProperty :element="document.body"
                                              label="Color"
                                              :styleSheetMode="{
                                                  styleCssClass: RockStylesCssClass,
                                                  rulesetCssSelector: '.component-divider hr'
                                              }" />
                    </div>
                </div>

                <WidthProperty :element="document.body"
                               label="Divider Width"
                               :min="5"
                               :max="100"
                               :styleSheetMode="{
                                   styleCssClass: RockStylesCssClass,
                                   rulesetCssSelector: '.component-divider hr'
                               }"
                               valueType="percentage" />

                <HorizontalAlignmentMarginProperty :element="document.body"
                                                   label="Horizontal Alignment"
                                                   :styleSheetMode="{
                                                       styleCssClass: RockStylesCssClass,
                                                       rulesetCssSelector: '.component-divider hr'
                                                   }" />

                <MarginProperty :element="document.body"
                                label="Padding"
                                :styleSheetMode="{
                                    styleCssClass: RockStylesCssClass,
                                    rulesetCssSelector: '.component-divider hr'
                                }" />
            </Accordion>
        </AccordionGroup>
    </FlatPanel>
</template>

<script setup lang="ts">
    import { onUnmounted, PropType, ref, watch } from "vue";
    import Accordion from "../accordion.partial.obs";
    import AccordionGroup from "../accordionGroup.partial.obs";
    import FlatPanel from "../flatPanel.partial.obs";
    import BackgroundImagePropertyGroup from "../properties/backgroundImagePropertyGroup.partial.obs";
    import BackgroundColorProperty from "../properties/backgroundColorProperty.partial.obs";
    import BorderPropertyGroup from "../properties/borderPropertyGroup.partial.obs";
    import BorderRadiusProperty from "../properties/borderRadiusProperty.partial.obs";
    import CommunicationTemplateProperty from "../properties/communicationTemplateProperty.partial.obs";
    import DividerColorProperty from "../properties/dividerColorProperty.partial.obs";
    import DividerStyleProperty from "../properties/dividerStyleProperty.partial.obs";
    import DividerThicknessProperty from "../properties/dividerThicknessProperty.partial.obs";
    import DropDownListProperty from "../properties/dropDownListProperty.partial.obs";
    import FontPropertyGroup from "../properties/fontPropertyGroup.partial.obs";
    import HorizontalAlignmentMarginProperty from "../properties/horizontalAlignmentMarginProperty.partial.obs";
    import MarginProperty from "../properties/marginProperty.partial.obs";
    import PaddingProperty from "../properties/paddingProperty.partial.obs";
    import RangeSliderProperty from "../properties/rangeSliderProperty.partial.obs";
    import { ValueProvider } from "../types.partial";
    import {
        applyDefaultValueToProvider,
        contentAlignmentProvider,
        DefaultBodyAlignment,
        DefaultBodyWidth,
        createBodyBackgroundColorProvider,
        RockStylesCssClass,
        RockBodyInnerContainerCssClass,
        createBodyWidthProvider
    } from "../utils.partial";
    import WidthProperty from "../properties/widthProperty.partial.obs";
    import { Guid } from "@Obsidian/Types";
    import { useVModelPassthrough } from "@Obsidian/Utility/component";
    import { ListItemBag } from "@Obsidian/ViewModels/Utility/listItemBag";

    const props = defineProps({
        document: {
            type: Object as PropType<Document>,
            required: true
        },

        communicationTemplateGuid: {
            type: String as PropType<Guid | null | undefined>,
            required: false
        },

        communicationTemplates: {
            type: Object as PropType<ListItemBag[] | null | undefined>,
            required: false
        }
    });

    const emit = defineEmits<{
        (e: "complete"): void;
        (e: "delete"): void;
        (e: "update:communicationTemplateGuid", value: Guid | null | undefined): void;
    }>();

    // #region Values

    const internalCommunicationTemplateGuid = useVModelPassthrough(props, "communicationTemplateGuid", emit);
    const bodyWidthProvider = ref<ValueProvider<number | null | undefined>>(internalCreateBodyWidthProvider());
    const bodyAlignmentProvider = ref<ValueProvider<string | null | undefined>>(createBodyAlignmentProvider());
    const bodyColorProvider = ref<ValueProvider<string | null | undefined>>(createBodyColorProvider());

    // #endregion Values

    // #region Functions

    function internalCreateBodyWidthProvider(): ValueProvider<number | null | undefined> {
        return createBodyWidthProvider(props.document.body as HTMLBodyElement);
    }

    function createBodyAlignmentProvider(): ValueProvider<string | null | undefined> {
        return contentAlignmentProvider(props.document.body);
    }

    function createBodyColorProvider(): ValueProvider<string | null | undefined> {
        return createBodyBackgroundColorProvider(props.document.body as HTMLBodyElement);
    }

    // #endregion Functions

    // #region Watchers

    watch(() => props.document, () => {
        bodyWidthProvider.value.dispose();
        bodyWidthProvider.value = internalCreateBodyWidthProvider();

        bodyAlignmentProvider.value.dispose();
        bodyAlignmentProvider.value = createBodyAlignmentProvider();

        bodyColorProvider.value.dispose();
        bodyColorProvider.value = createBodyColorProvider();
    });

    // #endregion Watchers

    // #region Hooks

    onUnmounted(() => {
        bodyWidthProvider.value.dispose();
        bodyAlignmentProvider.value.dispose();
        bodyColorProvider.value.dispose();
    });

    // #endregion Hooks
</script>