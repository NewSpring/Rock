{% comment %} {% include '~~/Assets/Lava/GroupFinder.lava' %} {% endcomment %}
{% assign apiKey = 'Global' | Attribute:'GoogleApiKey' %}
{% javascript id:'googlemapsmarkerclusterer' url:'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js' %}{% endjavascript %}
{% javascript id:'googlemapsapi' url:'{{ "https://maps.googleapis.com/maps/api/js?key=" | Append:apiKey }}&force=canvas' %}{% endjavascript %}
{{ 'https://cdnjs.cloudflare.com/ajax/libs/URI.js/1.19.1/URI.min.js' | AddScriptLink }}

{%- assign currentUrl = 'Global' | Page:'Url' -%}
{%- assign groupViewUrl = "/groups/" -%}
{%- assign daysofweek = "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday" -%}
{%- assign daysofweek = daysofweek | Split:',' -%}
{%- capture noResults -%}<div class="no-results">Unfortunately, we didn't find any groups matching your search. Gather some friends, and start your own group!</div>
{%- endcapture -%}

<style>

  .border-transparent {
    border-color: transparent;
  }

  footer {
    display: none;
  }

  #groups {
    margin-right: 50%;
  }

  @media screen and (max-width: 667px) {
    #groups {
      margin-right: 0;
      margin-top: 400px;
    }
  };


  @-webkit-keyframes rotating /* Safari and Chrome */ {
  from {
    -webkit-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes rotating {
  from {
    -ms-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -ms-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.rotating {
  -webkit-animation: rotating .5s linear infinite;
  -moz-animation: rotating .5s linear infinite;
  -ms-animation: rotating .5s linear infinite;
  -o-animation: rotating .5s linear infinite;
  animation: rotating .5s linear infinite;
}

.js-close-fullscreen-map .fa-circle:before {
  border-radius:1000px;
  box-shadow: 0 1px 3px rgba(28,28,28,0.25), 0 3px 0px rgba(28,28,28,0.1);
}

.js-close-fullscreen-map:focus {
  color: #fff;
}
</style>


{%- assign wrapperId = uniqueid -%}



<div id="group-finder-wrapper" class="position-fixed top-zero right-zero bottom-zero left-zero" style="overflow-y: scroll;  -webkit-overflow-scrolling: touch;">
  <div id="map-wrapper" class="position-fixed top-zero right-zero bottom-zero left-zero">
    <a href="#" class="hidden js-close-fullscreen-map position-absolute top-zero left-zero push-top push-left xs-push-half-top xs-push-half-left text-white text-hover-white" style="z-index: 100;">
      <span class="fa-stack fa-lg">
        <i class="fas fa-circle fa-stack-2x"></i>
        <i class="fas fa-times fa-stack-1x text-gray-darker"></i>
      </span>
    </a>
    <div id="map-canvas" class="full-screen"></div>
  </div>
  <div id="groups" class="position-relative soft xs-soft-half" style="z-index: 1000;">
    <p class="text-center"><i class="fas fa-lg text-primary fa-spinner-third rotating"></i></p>
  </div>
</div>



<script>
document.addEventListener("DOMContentLoaded", function() {

  var zipinput = document.getElementById('zipinput');
  var zipbutton = document.getElementById('zipbutton');

  zipinput.addEventListener('keydown',function(e){
    if (e.keyCode === 13) {
      e.preventDefault();
      findGroups(zipinput.value);
    }
  });

  zipbutton.addEventListener('click',function(e){
    e.preventDefault();
    findGroups(zipinput.value);
  });


  var windowWidth = window.innerWidth;
  var windowHeight = window.innerHeight;
  var groupFinderWrapper = document.getElementById("group-finder-wrapper");
  var groupFinderWrapper = document.getElementById("group-finder-wrapper");

  function groupFinderLayout(){

    if(windowWidth > 668) {
      // Desktop
      var wrapperOffset = $('#navigation').height() + $('#navigation-secondary').height();
    } else {
      // Mobile
      var wrapperOffset = $('#navigation-secondary').height();
    }

    groupFinderWrapper.style.top = wrapperOffset + "px";

  };

  groupFinderLayout();

  window.addEventListener('resize', groupFinderLayout);


  var defaultLatLng = new google.maps.LatLng(34.0374891,-81.0076046); // Default
  
  drawMap(defaultLatLng); // No geolocation support, show default map

  function drawMap(latlng) {
      var myOptions = {
        center: latlng,
        zoom: 8,
        gestureHandling: 'greedy',
        {{ 'Global' | Attribute:'GoogleMapsOptions' }}
      };
      map = new google.maps.Map(document.getElementById("map-canvas"), myOptions);
      // place the infowindow.  Invisible, without content.
      var infowindow = new google.maps.InfoWindow({
        content: '',
      });

      bounds = new google.maps.LatLngBounds();
  }

  $('#dynamic-content').on('click','a',function(e){
      e.preventDefault();
      var targetUrl = $(this).attr('href'),
          targetTitle = $(this).attr('title');
      window.history.pushState({url: "" + targetUrl + ""}, targetTitle, targetUrl);
      findGroups();
      updateFilters();
  });

  findGroups();
  updateFilters();

});

function updateFilters() {
  var currentUrl = window.location.href;
  var uri = URI(window.location.href);
  var query = uri.search(true);

  $('.js-filters .js-filter').each(function(i, obj) {
    filter = $(obj);
    if (URI(window.location.href).hasQuery(filter.data("key"), filter.data("value"), true)) {
      link = URI(window.location.href).removeSearch(filter.data("key"), filter.data("value"));
      filter.addClass("active").attr('href',link);
    } else {
      link = URI(window.location.href).addSearch(filter.data("key"), filter.data("value"));
      filter.removeClass("active").attr('href',link);
    }
  });
}

function removeURLParameter(url, parameter) {
  var urlparts = url.split('?');   
  if (urlparts.length >= 2) {

    var prefix = encodeURIComponent(parameter) + '=';
    var pars = urlparts[1].split(/[&;]/g);

    for (var i = pars.length; i-- > 0;) {    
      if (pars[i].lastIndexOf(prefix, 0) !== -1) {  
        pars.splice(i, 1);
      }
    }

    return urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : '');
  }
  return url;
}

function findGroups(PostalCode) {
  $('#groups').html('<p class="text-center"><i class="fas fa-lg text-primary fa-spinner-third rotating"></i></p>')
  var currentUrl = window.location.href;
  var urlParams = new URLSearchParams(currentUrl);

  if(!PostalCode){
    var PostalCode = urlParams.get('PostalCode').toString();
    zipinput.value = PostalCode;
  }
  
  var campusesArray = urlParams.getAll('campuses').toString();
  var schedulesArray = urlParams.getAll('schedules').toString();
  var tagsArray = urlParams.getAll('tags').toString();

  if(PostalCode) {
    urlParams.set('PostalCode', PostalCode);
  } else {
    urlParams.delete('PostalCode');
  }

  if(campusesArray){
    urlParams.delete('campuses');
    urlParams.append('campuses',campusesArray);
  }
  if(schedulesArray){
    urlParams.delete('schedules');
    urlParams.append('schedules',schedulesArray);
  }
  if(tagsArray){
    urlParams.delete('tags');
    urlParams.append('tags',tagsArray);
  }

  var query = decodeURIComponent(urlParams.toString()).split("?")[1];
  

  if(!query.includes("PostalCode")){
    zipinput.focus();
    $('#groups').html('<div class="alert alert-info" role="alert">Please enter your zip code.</div>');
    return;
  }

  // history.pushState(null, null, currentUrl.split('?')[0] + '?' + query);

  $.ajax({
      url: '/api/GroupFinder?' + query,
      dataType: 'json',
      success: function(response) {

        $('#groups').html(" ");

        if(window.markerCluster){
          window.markerCluster.clearMarkers();
          bounds = new google.maps.LatLngBounds();
        }

        if(!$.isEmptyObject(response)){
          var markers = response.map(function(item, i) {
            if (item.GroupLocation !== null) {
              var marker = new google.maps.Marker({
                position: new google.maps.LatLng(item.GroupLocation.Latitude, item.GroupLocation.Longitude),
                icon: '{{ "Global" | Attribute:"GoogleMapsMarkerImage","Url" }}'
              });

              google.maps.event.addListener(marker, 'click', function() {
                window.location.href = "/groups/" + item.Id;
              });

              bounds.extend(marker.position);

            }

            var groupCard = `
            {[ card title:'${ item.Name }' titlesize:'h3' content:'${ item.Distance ? `<p class="push-half-bottom"><span class="label label-info sans-serif letter-spacing-condensed circular">${ item.Distance } miles</span></p>` : `` }${ item.Schedule != null && item.Schedule != "No Schedule" ? `<p class="sans-serif stronger letter-spacing-condensed push-half-bottom"><small>${ item.Schedule }</small></p><p class="push-half-bottom">${ item.Description }</p>` : `` }' linkurl:'/groups/${ item.Id }' linktext:'Group Details' ]}
            `
            
            $('#groups').append(groupCard);

            return marker;
          });
          

          // Add a marker clusterer to manage the markers.
          var markerCluster = new MarkerClusterer(map, markers, {imagePath: 'https://s3.amazonaws.com/ns.assets/newspring/mapmarkers/m'});
          markerCluster.getStyles().map(function(obj){ return Object.assign(obj, {textColor: 'white',textSize:'13'}) });
          window.markerCluster = markerCluster;

          $('#groups').prepend('<h3 class="h5 push-half-bottom">' + response.length + ' groups found</h3>');            
          
          map.fitBounds(bounds);
        } else {
          $('#groups').html('<h3 class="h5">No Groups Found</h3>');
        }
      }
  });

  var fullscreenMapCloseButton = $('.js-close-fullscreen-map');
  var windowWidth = window.innerWidth;
  var windowHeight = window.innerHeight;
  var mapCanvas = document.getElementById("map-wrapper");

  if(windowWidth <= 668) {
    map.addListener('drag', function() {
      fullscreenMapCloseButton.removeClass('hidden');
      mapCanvas.style.height = windowHeight + "px";
    }, false);

    fullscreenMapCloseButton[0].addEventListener('click', function(){
      fullscreenMapCloseButton.addClass('hidden');
      mapCanvas.style.height = windowHeight / 3 + "px";
    });
  };
}
</script>