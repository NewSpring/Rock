{%- assign id = id | Default:uniqueid -%}
{% assign defaultTranslation = 'Global' | Attribute:'BibleTranslation','Value' %}
{[ scripturize defaulttranslation:'{{ defaultTranslation }}' landingsite:'BibleGateway' cssclass:'scripture' openintab:'true' ]}

{%- assign modalid = uniqueid -%}
{% assign ratio = item.Ratio | Downcase %}
{% assign foregroundColor = item.ForegroundColor | Replace:' ','-' | Downcase %}

<style>
    {% if item.BackgroundColor %}
        #{{ id }} {
            background-color: {{ item.BackgroundColor }};
        }

        #{{ id }} blockquote, blockquote footer, blockquote small, blockquote .small {
            color: #fff;
        }
    {% endif %}
</style>

<section id="{{ id }}" data-column="{{ item.BlockWidth }}" class="shell text-{{ item.TextAlignment }} {% if ratio and ratio != empty %}hard{% endif %} bg-white position-relative overflow-hidden flush-sides soft-double-top xs-soft-top xs-hard-sides xs-push-half-bottom rounded-lg {% if foregroundColor %}text-{{ foregroundColor }}{% endif %}" {% if item.BackgroundColor != '' %}style="background-color:{{ item.BackgroundColor }} !important;"{% endif %}>

    {% if ratio and ratio != empty %}
    <div class="ratio-{{ ratio }} sm-ratio-shuare xs-ratio-square">
        <div class="ratio-item d-flex justify-content-center align-items-{{ item.ContentAlignment }} {% if item.Image and item.Image != empty %}{% if item.TextAlignment == 'left' %}floating-left{% elseif item.TextAlignment == 'right' %}floating-right{% endif %}{% endif %} sm-text-center xs-text-center">
    {% endif %}

                {% if item.Image != null and item.Image != '' %}
                    <span class="full-screen background-cover background-center {% if item.Grayscale == 'Yes' %}grayscale{% endif %}" style="{% if item.ImageBlur and item.ImageBlur > 0 %}filter: blur({{ item.ImageBlur | Times:2 }}px); top: -50px; right: -50px; bottom: -50px; left: -50px;{% endif %} {% if item.ImageFlip == 'Yes' %}transform:scaleX(-1);{% endif %} background-image: url('{{ item.Image }}'); {% if item.ImageOpacity != null and item.ImageOpacity != '' %}opacity: {{ item.ImageOpacity }};{% endif %}"></span>
                {% endif %}

                <div class="bring-forward text-constrained {% if item.TextAlignment == 'Center' or item.Image == '' %}mx-auto{% endif %} {% if item.TextAlignment == 'Center' and item.Image == '' %}text-center{% elseif item.TextAlignment == 'Right' and item.Image != '' %}text-left pull-right{% elseif item.Image == '' and item.TextAlignment == 'Right' %}text-center{% endif %} xs-text-center soft-double-top soft-bottom soft-double-sides clearfix xs-soft-top xs-soft-sides xs-hard-bottom">

                    {% if item.HideForegroundElements == 'True' %}<div class="hidden">{% endif %}

                        {% if item.Label != null and item.Label != '' %}
                            <p><small class="label label-default circular sans-serif letter-spacing-condensed">{{ item.Label }}</small></p>
                        {% endif %}

                        {% if item.Title != null and item.Title != '' %}
                            <h2 class="{% if item.TitleSize != null and item.TitleSize != '' %}{{ item.TitleSize }}{% endif %} push-half-bottom">{{ item.Title }}</h2>
                        {% endif %}

                        {% if item.Subtitle != null and item.Subtitle != '' %}
                            <p class="sans-serif stronger text-uppercase letter-spacing-condensed text-gray-light push-half-bottom"><small>{{ item.Subtitle }}</small></p>
                        {% endif %}

                        {% assign length = item.Content | Size %}
                        {% if item.Content and item.Content != empty %}
                            <div class="{% if item.Image and item.Image != '' and item.TextAlignment == 'Center' %}text-center{% endif %}">
                                {% if trimcopy == 'Yes' %}
                                    {{ item.Content | Truncate:140,'...' }}{% if length > 140 %} <a href="#" data-toggle="modal" data-target="#{{ modalid }}">Read More</a>{% endif %}
                                {% else %}
                                    {{ item.Content | HtmlDecode }}
                                {% endif %}
                            </div>
                        {% endif %}

                    {% if item.HideForegroundElements == 'True' %}</div>{% endif %}

                    <div class="{% if item.Image == '' or item.Image != '' and item.TextAlignment == 'Center' %}text-center{% endif %}">

                        {% if item.HideForegroundElements == 'True' %}<div class="hidden">{% endif %}

                            {% if item.LinkUrl and item.LinkUrl != empty %}
                                <p>
                                    {[ button linkurl:'{{ item.LinkUrl | Trim }}' linktext:'{{ item.LinkText }}' buttontype:'' buttonsize:'' ]}
                                </p>
                            {% endif %}

                            {% if item.Video != null and item.Video != '' %}
                                {[ wistiaButton id:'{{ item.Video }}' buttontext:'' buttonclasses:'' contentchannelitemid:'' entitytypeid:'' entityid:'' ]}
                            {% endif %}

                        {% if item.HideForegroundElements == 'True' %}</div>{% endif %}

                        {% if item.Lava != null and item.Lava != '' %}
                            {% if item.HideForegroundElements == 'True' %}<div class="soft-ends">{% endif %}
                                {{ item.Lava | HtmlDecode }}
                            {% if item.HideForegroundElements == 'True' %}</div>{% endif %}
                        {% endif %}
                    </div>

                </div>

    {% if ratio and ratio != empty %}
        </div>
    </div>
    {% endif %}

</section>

{% if item.GradientAmount > 0 and item.ContentAlignment == 'start' or item.ContentAlignment == 'end' and item.BackgroundColor != '' %}
    {% assign gradientorientation = item.ContentAlignment |  Replace:'start','0' | Replace:'end','180' %}
    <style>
        #{{ id }} .background-cover:after {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background: rgb(0,0,0);
            background: linear-gradient({{ gradientorientation | Append:'deg' }}, transparent 0%, {{ item.BackgroundColor }} 100%);
            opacity: {{ item.GradientAmount }};
        }
    </style>
{% endif %}

{% if item.TrimCopy == 'Yes' %}
    {% if length > 140 %}
    <div class="modal fade" id="{{ modalid }}" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="text-gray-darker pull-right" data-dismiss="modal" aria-label="Close">
                        <i class="fa fa-lg fa-times"></i>
                    </a>
                    {% if item.Title != null and item.Title != '' %}
                        <h3 class="flush">{{ item.Title }}</h3>
                    {% endif %}
                </div>
                <div class="modal-body soft hard-bottom">
                    {{ item.Content }}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    {% endif %}
{% endif %}

{[ endscripturize ]}
