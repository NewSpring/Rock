{% assign groupId = 'Global' | PageParameter:'GroupId' %}
{% assign currentUrl = 'Global' | Page:'Url' %}

{% if groupId == empty %}
  {% if CurrentPersonCanEdit %}
    <p class="alert alert-danger">No GroupId was defined. If you could not edit you would be redirected to: <a href="/page-not-found">/page-not-found</a>.</p>
  {% else %}
      {{ '/page-not-found' | PageRedirect }}
  {% endif %}
{% endif %}

{% assign group = groupId | GroupById %}

{% if group and group != empty %}

  {{ group.Name | SetPageTitle:'BrowserTitle' }}
  {{ group.Name | SetPageTitle }}

  {% sql return:'occurrences' %}
  SELECT TOP 12
      ao.Id,
      ao.OccurrenceDate,
      CASE
        WHEN ao.DidNotOccur = 1 THEN 'true'
        ELSE 'false'
      END 'DidNotOccur',
      (
        SELECT COUNT(*)
        FROM Attendance a
        WHERE a.OccurrenceId = ao.Id
        AND a.DidAttend = 1
      ) 'Attended',
      (
          SELECT COUNT(*)
          FROM Attendance a
          WHERE a.OccurrenceId = ao.Id
      ) 'Total'
  FROM AttendanceOccurrence ao
  WHERE ao.GroupId = {{ groupId }}
  ORDER BY ao.OccurrenceDateKey DESC
  {% endsql %}

  {% assign lookBack = 30 %}
  {% assign lookAhead = 30 %}

  {% sql return:'groupPulse' %}
  SELECT
      gm.PersonId 'PersonId',
      a.Name 'Name',
      a.Id 'Id',
      p.NickName,
      p.LastName,
      CASE
          WHEN a.Id = 4055 THEN 'was baptized'
          WHEN a.Id = 4056 THEN 'was saved'
          WHEN a.Id IN (74894,74895,74896,74897) THEN 'completed "' + a.Name + '" of Connect'
          WHEN a.Id = 19882 THEN 'completed Connect'
          WHEN a.Id = 52311 THEN 'started serving'
      END 'Action',
      a.IconCSSClass 'IconCSSClass',
      av.ValueAsDateTime 'Date'
  FROM GroupMember gm
  JOIN Person p
  ON gm.PersonId = p.Id
  JOIN AttributeValue av
  ON av.EntityId = gm.PersonId
  JOIN Attribute a
  ON av.AttributeId = a.Id
  WHERE gm.GroupId = {{ groupId }}
  AND gm.GroupMemberStatus = 1
  AND gm.IsArchived = 0
  AND av.AttributeId IN (4055,4048,19882,74894,74895,74896,74897,52311)
  AND av.ValueAsDateTime >= DATEADD(day,-{{ lookBack }},GETDATE())
  ORDER BY av.Value DESC
  {% endsql %}

  {% sql return:'birthdays' %}
    SELECT
        p.Id 'PersonId',
        'BirthDate',
        NULL,
        p.NickName,
        p.LastName,
        'birthday is' 'Action',
        'fas fa-birthday-cake' 'IconCSSClass',
        CONVERT(datetime, CONCAT(YEAR(GETDATE()), '-', p.BirthMonth,'-', p.BirthDay)) 'Date'
    FROM GroupMember gm
    JOIN Person p
    ON gm.PersonId = p.Id
    WHERE gm.GroupId = {{ groupId }}
    AND gm.GroupMemberStatus = 1
    AND gm.IsArchived = 0
    AND p.BirthDate IS NOT NULL
    AND CONVERT(datetime, CONCAT(YEAR(GETDATE()), '-', p.BirthMonth,'-', p.BirthDay)) > GETDATE()
    AND CONVERT(datetime, CONCAT(YEAR(GETDATE()), '-', p.BirthMonth,'-', p.BirthDay)) <= DATEADD(day,+{{ lookAhead }},GETDATE())
  {% endsql %}

  {% sql return:'anniversaries' %}
    SELECT
        p.Id 'PersonId',
        'AnniversaryDate',
        NULL,
        p.NickName,
        p.LastName,
        'anniversary is' 'Action',
        'fas fa-heart' 'IconCSSClass',
        CASE
            WHEN p.AnniversaryDate IS NOT NULL THEN CONVERT(datetime, CONCAT(YEAR(GETDATE()), SUBSTRING(CONVERT(varchar, p.AnniversaryDate), 5, 10)))
            ELSE NULL
        END 'Date'
    FROM GroupMember gm
    JOIN Person p
    ON gm.PersonId = p.Id
    WHERE gm.GroupId = {{ groupId }}
    AND gm.GroupMemberStatus = 1
    AND gm.IsArchived = 0
    AND p.AnniversaryDate IS NOT NULL
    AND CONVERT(datetime, CONCAT(YEAR(GETDATE()), SUBSTRING(CONVERT(varchar, p.AnniversaryDate), 5, 10))) > GETDATE()
    AND CONVERT(datetime, CONCAT(YEAR(GETDATE()), SUBSTRING(CONVERT(varchar, p.AnniversaryDate), 5, 10))) <= DATEADD(day,+{{ lookAhead }},GETDATE())
    ORDER BY CONVERT(datetime, CONCAT(YEAR(GETDATE()), SUBSTRING(CONVERT(varchar, p.AnniversaryDate), 5, 10))) ASC
  {% endsql %}

  {% assign pulseCount = groupPulse | Size %}
  {% assign birthdaysCount = birthdays | Size %}
  {% assign anniversariesCount = anniversaries | Size %}

  {% capture groupPulseString %}[
    {% if pulseCount >= 1 %}{{ groupPulse | ToJSON | Replace:'[','' | Replace:']','' | Append:',' }}{% endif %}
    {% if birthdaysCount >= 1 %}{{ birthdays | ToJSON | Replace:'[','' | Replace:']','' | Append:',' }}{% endif %}
    {% if anniversariesCount >= 1 %}{{ anniversaries | ToJSON | Replace:'[','' | Replace:']','' }}{% endif %}
  ]{% endcapture %}
  {% assign groupPulse = groupPulseString | FromJSON | OrderBy:'Date asc' %}

  {% comment %}Getting our group members ourselves here instead of using the members property, so we can get LastAttendedDate for this specific group.{% endcomment %}
  {% sql return:'members' %}
    DECLARE @GroupId AS INT = {{ groupId }};

    SELECT
        *,
        gtr.IsLeader,
        gtr.Name,
        (
            SELECT TOP 1 ao.OccurrenceDate
            FROM PersonAlias pa
            JOIN Attendance a
            ON a.PersonAliasId = pa.Id
            JOIN AttendanceOccurrence ao
            ON a.OccurrenceId = ao.Id
            WHERE pa.PersonId = gm.PersonId
            AND ao.GroupId = gm.GroupId
            AND a.DidAttend = 1
            ORDER BY ao.OccurrenceDate DESC
        ) 'LastAttendedDate'
    FROM GroupMember gm
    JOIN Person p
    ON gm.PersonId = p.Id
    JOIN GroupTypeRole gtr
    ON gm.GroupRoleId = gtr.Id
    WHERE gm.GroupId = @GroupId
    AND gm.GroupMemberStatus = 1
    AND gm.IsArchived = 0
    AND gtr.Name != 'Coach'
    ORDER BY gtr.IsLeader DESC, gtr.[Order] asc, p.LastName ASC, p.NickName ASC
  {% endsql %}

  {% assign totalMembers = 0 %}
  {% assign totalAttendees = 0 %}
  {% for occurrence in occurrences %}
    {% assign totalMembers = totalMembers | Plus:occurrence.Total %}
    {% assign totalAttendees = totalAttendees | Plus:occurrence.Attended %}
  {% endfor %}
  {% assign attendanceAvg = totalAttendees | DividedBy:totalMembers,2 | Format:'##%' %}

  <h1 class="push-top flush-bottom strongest" style="font-size:64px;">{{ group.Name }}</h1>

  <div class="row">
    <div class="col-md-5 col-sm-12 col-xs-12">

      <h2 class="h5 text-uppercase strongest push-double-top">Attendance History</h2>

      {[ cardBlock ]}
        {% if occurrences and occurrences != empty %}
          <p>Your average attendance for the past {{ occurrences | Where:'DidNotOccur', 'false' | Size }} meetings is <b>{{ attendanceAvg }}</b></p>

          <div class="chart row flush-sides">
            {% for occurrence in occurrences reversed %}<div class="col-xs-1 chart-col position-relative">
              <div class="bar {% if occurrence.DidNotOccur == 'true' %}bg-gray-light{% else %}bg-gray-lighter{% endif %}">
                {% if occurrence.DidNotOccur == 'false' %}
                  <div class="bar-fill bg-primary" style="height: {{ occurrence.Attended | DividedBy:occurrence.Total | Times:100 | Format:'##' }}%;"></div>
                {% endif %}

                <div class="bar-label sans-serif stronger letter-spacing-condensed text-right"><small>{{ occurrence.OccurrenceDate | Date:'M/d' }}</small></div>
              </div>
            </div>{% endfor %}
          </div>
        {% else %}
          <p class="flush">There is no recorded attendance data for your group.</p>
        {% endif %}
      {[ endcardBlock ]}

      <div class="row">
        <div class="col-md-6 col-sm-12 col-xs-12 sm-push-half-bottom xs-push-half-bottom">
          <p class="flush"><a href="{{ currentUrl | Append:'/attendance/detail' }}" class="btn btn-block btn-primary shadowed"><i class="fal fa-check push-quarter-right"></i> Take Attendance</a></p>
        </div><div class="col-md-6 col-sm-12 col-xs-12">
          <p class="flush"><a href="{{ currentUrl | Append:'/attendance' }}" class="btn btn-block btn-primary shadowed"><i class="fal fa-history push-quarter-right"></i> Attendance History</a></p>
        </div>
      </div>

    </div><div class="col-md-7 col-sm-12 col-xs-12">

      {% comment %}
        Display Group Communication
      {% endcomment %}
      <h2 class="h5 text-uppercase strongest push-double-top">Group Communication</h2>

      <div class="row">
        <div class="col-md-6 col-xs-12">
          <a href="#" class="btn btn-primary btn-block shadowed xs-push-half-bottom js-copy"><i class="fal fa-copy push-quarter-right"></i> Copy Phone Numbers</a>
        </div><div class="col-md-6 col-xs-12">
          <a href="mailto:{{ group.Members | Map:'Person' | Select:'Email' | Join:',' }}" class="btn btn-primary btn-block shadowed"><i class="fal fa-inbox push-quarter-right"></i> Email Group</a>
        </div>
      </div>

      {% capture groupMobilesWithMessaging %}{% for member in group.Members %}{% assign mobileNumber = member.Person.PhoneNumbers | Where:'NumberTypeValueId',12 | Where:'IsMessagingEnabled',true | Select:'NumberFormatted' %}{% if mobileNumber and mobileNumber != empty %}{{ mobileNumber }}{% endif %}{% unless mobileNumber == empty or forloop.last %}, {% endunless %}{% endfor %}{% endcapture %}

      <input type="text" class="form-control js-copy-source hidden" value="{{ groupMobilesWithMessaging }}" title="Click to Copy to Clipboard">

      <script>
        // Copies input value to clipboard on button click
        var copyLink = document.querySelector('.js-copy');
        copyLink.addEventListener('click',function(e){
          e.preventDefault();
          copyLink = e.target;
          var copyTarget = $('.js-copy-source')[0];
          var copyLinkInnerHTML = copyLink.innerHTML;
          console.log(copyLinkInnerHTML);
          copyTarget.setSelectionRange(0, copyTarget.value.length);
          navigator.clipboard.writeText(copyTarget.value);
          copyLink.innerHTML = 'Copied!';
          copyLink.classList.toggle('btn-primary');
          copyLink.classList.toggle('btn-gray-dark');
          setTimeout(function(){
            copyLink.innerHTML = copyLinkInnerHTML;
            copyLink.classList.toggle('btn-primary');
            copyLink.classList.toggle('btn-gray-dark');
          }, 2000);
        });
      </script>

      {% comment %}
        Display Group Pulse
      {% endcomment %}
      {% if groupPulse and groupPulse != empty %}
        <h2 class="h5 text-uppercase strongest push-double-top">Group Pulse</h2>

        <style>
          .list-group.shadowed .list-group-item {
            border-right: 0;
            border-left: 0;
          }
          .list-group.shadowed .list-group-item:first-child {
            border-top: 0;
          }
          .list-group.shadowed .list-group-item:last-child {
            border-bottom: 0;
          }
        </style>

        <ul class="list-group rounded shadowed">
          {% for person in groupPulse %}
            <li class="list-group-item">
              <p class="flush">{% if person.IconCSSClass and person.IconCSSClass != empty %}<i class="{{ person.IconCSSClass }} push-quarter-right"></i> {% endif %}<a href="{{ currentUrl | Append:'/' | Append:person.PersonId }}" class="text-decoration-none"><b>{{ person.NickName }} {% if person.Action contains 'birthday' or person.Action contains 'anniversary' %}{{ person.LastName | Possessive }}{% else %}{{ person.LastName }}{% endif %}</b></a> {{ person.Action }} on {[ formatDate date:'{{ person.Date }}' ]}.</p>
            </li>
          {% endfor %}
        </ul>
      {% endif %}

    </div><div class="col-md-12 col-xs-12">

      {% comment %}
        Display Group Members
      {% endcomment %}
      <h2 class="h5 text-uppercase strongest push-double-top">Group Members</h2>
      {% capture groupMemberAddButton %}<p class="xs-push-half-bottom"><a href="{{ currentUrl | Append:'/add' }}" class="btn btn-primary xs-btn-block shadowed"><i class="fal fa-plus push-quarter-right"></i> Add Group Member</a></p>{% endcapture %}

      {{ groupMemberAddButton }}

      <div class="row">
        {% for member in members %}<div class="col-md-4 col-sm-6 col-xs-12">
          {% assign linkurl = '/account/groups/' | Append:group.Id | Append:'/' | Append:member.PersonId %}
          {% assign person = member.PersonId | PersonById %}
          {% assign groupTypeId = group.GroupTypeId | AsString %}

          {% assign lastAttended = member.LastAttendedDate %}
          {% assign daysSinceAttended = 'Now' | DateDiff:lastAttended,'d' | Times:-1 %}
          {% assign lastAttendedFormatted = lastAttended | Date:'M/d/yyyy' %}

          {% assign mobile = person | PhoneNumber:'Mobile', true %}
          {% assign home = person | PhoneNumber:'Home', true %}
          {% assign work = person | PhoneNumber:'Work', true %}
          {% assign phone = mobile | WithFallback:'',home | WithFallback:'',work %}

          {% if member.IsLeader == 'true' %}
            {% assign type = 'primary' %}
            {% assign textType = 'primary' %}
            {% assign note = 'Group Leader' %}
          {% elseif member.GroupMemberStatus == 'Pending' %}
            {% assign type = 'info' %}
            {% assign textType = 'info' %}
            {% assign note = 'Pending Group Member' %}
          {% elseif daysSinceAttended >= 60 %}
            {% assign type = '' %}
            {% assign textType = 'danger' %}
            {% assign note = 'Last Attended ' | Append:lastAttendedFormatted %}
          {% elseif daysSinceAttended >= 30 %}
            {% assign type = '' %}
            {% assign textType = 'warning' %}
            {% assign note = 'Last Attended ' | Append:lastAttendedFormatted %}
          {% else %}
            {% assign type = '' %}
            {% assign textType = '' %}
            {% assign note = '' %}
          {% endif %}

          {[ cardBlock type:'{{ type }}' ]}
            <div class="row">
              <div class="col-xs-4">
                <a href="{{ linkurl }}" class="text-decoration-none">
                  <div class="ratio ratio-square background-cover background-center rounded" style="background-image:url('{{ person.PhotoUrl }}&maxwidth=200&maxheight=200');"></div>
                </a>
              </div><div class="col-xs-6">
                <a href="{{ linkurl }}" class="text-decoration-none">
                  <h2 class="h5 text-gray-darker push-quarter-bottom">{{ person.NickName }}<br>{{ person.LastName }}</h2>

                  <p class="text-{{ textType }} flush"><small>{{ note }}</small></p>

                </a>
              </div>
              {% if phone and phone != empty %}
                <a href="tel:{{ phone }}" class="position-absolute top-zero right-zero push-top push-right"><i class="fal fa-lg fa-phone"></i></a>

                <a href="sms:{{ phone }}" class="position-absolute bottom-zero right-zero push-bottom push-right"><i class="fal fa-lg fa-comments-alt"></i></a>
              {% endif %}
            </div>
          {[ endcardBlock ]}

        </div>{% endfor %}
      </div>

      {{ groupMemberAddButton }}

    </div>
  </div>

{% endif %}
